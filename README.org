#+title: Emacs
#+PROPERTY: header-args:emacs-lisp :tangle ./init.el :mkdirp yes :exports code :results none

* Package Management
** Archives
#+begin_src emacs-lisp
  (require 'package)

  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			   ("org" . "https://orgmode.org/elpa/")
			   ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))
#+end_src


** Install Automation
#+begin_src emacs-lisp
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))

  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src


** Updates
#+begin_src emacs-lisp
  (use-package auto-package-update
    :custom
    (auto-package-update-prompt-before-update t)
    (auto-package-update-show-preview t)
    (auto-package-update-delete-old-versions t)
    (auto-package-update-hide-results t)
    :config
    (auto-package-update-maybe))
#+end_src


* UI

** Framing
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)

  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (set-fringe-mode 10)
  (menu-bar-mode -1)

  (column-number-mode)
  (global-display-line-numbers-mode t)
  (dolist (mode '(org-mode-hook
		  eshell-mode-hook))
    (add-hook mode(lambda() (display-line-numbers-mode 0))))
#+end_src

** Themes
#+begin_src emacs-lisp
  (use-package doom-themes
    :init (load-theme 'doom-palenight t))

  (use-package all-the-icons)

  (use-package doom-modeline
    :init (doom-modeline-mode 1)
    :custom ((doom-modeline-height 15)))
#+end_src

** Org-Mode
#+begin_src emacs-lisp
  (use-package org-bullets
    :hook (org-mode . org-bullets-mode))


  (with-eval-after-load 'org
    (org-babel-do-load-languages
	'org-babel-load-languages
	'((emacs-lisp . t)
	  (python . t)
	  (shell . t)))

    (push '("conf-unix" . conf-unix) org-src-lang-modes))
#+end_src
